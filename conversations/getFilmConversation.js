import { InlineKeyboard } from 'grammy'
import { Film } from '../models/Film.js'
import replyWithFilm from '../functions/replyWithFilm.js'

export const getFilmConversation = async (conversation, ctx) => {
	try {
		await ctx.reply('üí¨ <b>–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–µ–≥–æ –≤–∞—Å —Ñ–∏–ª—å–º–∞/—Å–µ—Ä–∏–∞–ª–∞</b>')
		let code = await conversation.wait()
		if (isNaN(code.message.text)) {
			do {
				await ctx.reply('<b>‚ùå –í—ã –¥–æ–ª–∂–Ω—ã –≤–≤–µ—Å—Ç–∏ –∫–æ–¥!</b>')
				code = await conversation.wait()
			} while (isNaN(code.message.text))
		}

		const film = await Film.findOne({ where: { code: code.message.text } })

		if (!film) {
			const inline = new InlineKeyboard()
				.text('üè† –î–æ–º–æ–π', 'home')
				.text('ü™Ñ –í–≤–µ—Å—Ç–∏ –∫–æ–¥ –µ—â—ë —Ä–∞–∑', 'enterFilmCode')
			return ctx.reply(
				'<b>‚ùå –û—à–∏–±–∫–∞! –§–∏–ª—å–º —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω. üòï\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –Ω–∏–∂–µ üëá</b>',
				{ reply_markup: inline }
			)
		}
		return await replyWithFilm(
			ctx,
			film.photoFileId,
			film.title,
			film.description,
			JSON.parse(film.genre),
			film.year,
			film.country
		)
	} catch (e) {
		console.log(e)
	}
}
